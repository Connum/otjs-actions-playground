name: Run Unicode Test Suite

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      PUSH_TO_MAIN: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
      SHORT_COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
      GH_PAT: ${{ secrets.GH_PAT }}  # Personal Access Token with 'repo' and 'workflow' scope

    steps:
     
    - name: Set SHORT_COMMIT_SHA environment variable
      run: |
        SHORT_COMMIT_SHA=$(echo "${{ env.COMMIT_SHA }}" | cut -c 1-7)
        echo "SHORT_COMMIT_SHA=$SHORT_COMMIT_SHA" >> $GITHUB_ENV
      
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup node
      uses: actions/setup-node@v4

    # - name: Setup ninja
    #   uses: seanmiddleditch/gha-setup-ninja@master

    - name: Clone text-rendering-tests repository
      run: |
        git clone https://github.com/unicode-org/text-rendering-tests.git

    - name: Ensure reports directory exists
      run: mkdir -p reports

    # for speeding up the workflow when debugging this action
    - name: Delete HTML files in testcases directory
      run: |
        find text-rendering-tests/testcases -name '*.html' -not -name 'index.html' -delete
      
    - name: Run check.py script
      run: |
        cd text-rendering-tests
        python check.py --engine=OpenType.js --output="../reports/${{ env.COMMIT_SHA }}.html"
        
    - name: Replace version with commit hash and link to PR commit
      run: |
        sed -i -E "s@OpenType\.js(\xC2\xA0| )[0-9.]+@<a href=\"https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}/commits/${{ env.COMMIT_SHA }}\">OpenType.js ${{ env.SHORT_COMMIT_SHA }}</a>@" reports/${{ env.COMMIT_SHA }}.html

    - name: Upload build artifact
      if: ${{ env.PUSH_TO_MAIN == 'false' }}
      uses: actions/upload-artifact@v3
      with:
        name: unicode-text-rendering-report_${{ env.SHORT_COMMIT_SHA }}
        path: reports/${{ env.COMMIT_SHA }}.html

    - name: Update comment with artifact link
      if: ${{ env.PUSH_TO_MAIN == 'false' }}
      run: |
        ARTIFACT_URL="https://github.com/${{ github.repository }}/actions/artifacts/${{ github.run_id }}"
        echo $(curl -s -H "Authorization: Bearer $GH_PAT" -X GET "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments")
        COMMENT_ID=$(curl -s -H "Authorization: Bearer $GH_PAT" -X GET "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments" | jq -r ".[] | select(.body | contains(\"Artifact for commit ${{ env.SHORT_COMMIT_SHA }} is available\")) | .id // empty")
        if [ -n "$COMMENT_ID" ]; then
          echo "Updating existing comment"
          curl -s -H "Authorization: Bearer $GH_PAT" -X PATCH "https://api.github.com/repos/${{ github.repository }}/issues/comments/$COMMENT_ID" -d "{\"body\":\"Artifact for commit ${{ env.SHORT_COMMIT_SHA }} is available [here]($ARTIFACT_URL).\"}"
        else
          echo "Creating new comment"
          curl -s -H "Authorization: Bearer $GH_PAT" -X POST "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments" -d "{\"body\":\"Artifact for commit ${{ env.SHORT_COMMIT_SHA }} is available [here]($ARTIFACT_URL).\"}"
        fi
